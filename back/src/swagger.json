{
    "swagger": "2.0",
    "info": {
        "description": "descripcion",
        "version": "1.0.0",
        "title": "Hey! Chat",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "email": "samuraycats@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "host": "localhost:3000",
    "basePath": "/api",
    "schemes": [
        "http"
    ],
    "paths": {
        "/message": {
            "post": {
                "tags": [
                    "messages"
                ],
                "summary": "Add a new message",
                "description": "",
                "operationId": "addMessage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Message object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/message"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid input"
                    }
                },
                "security": [
                    {
                        "hey_auth": [
                            "write:pets",
                            "read:pets"
                        ]
                    }
                ]
            },
            "get": {
                "tags": [
                    "messages"
                ],
                "summary": "Returns messages",
                "description": "Returns messages",
                "operationId": "getmessage",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/message/{id}": {
            "get": {
                "tags": [
                    "messages"
                ],
                "summary": "Find purchase order by ID",
                "description": "For valid response try integer IDs with value >= 1.",
                "operationId": "getOrderById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of message that needs to be fetched",
                        "required": true,
                        "type": "integer",
                        "minimum": 1,
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/message"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Order not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "messages"
                ],
                "summary": "Update an existing message",
                "description": "",
                "operationId": "updateMessage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "name that need to be updated",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Message object that needs to be added",
                        "schema": {
                            "$ref": "#/definitions/messageUpdate"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Message not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [
                    {
                        "hey_auth": [
                            "write:pets",
                            "read:pets"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "messages"
                ],
                "summary": "Delete message ",
                "description": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
                "operationId": "deleteMessage",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the order that needs to be deleted",
                        "required": true,
                        "type": "integer",
                        "minimum": 1,
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Order not found"
                    }
                }
            }
        },
        "/user":{
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Add a new user",
                "description": "",
                "operationId": "addUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Message object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid input"
                    }
                },
                "security": [
                    {
                        "hey_auth": [
                            "write:pets",
                            "read:pets"
                        ]
                    }
                ]
            }
        },
        "/user/socket/{name}":{
            "put": {
                "tags": [
                    "users"
                ],
                "summary": "Update an existing user",
                "description": "",
                "operationId": "updateUserBySocket",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "name that need to be updated",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "User object that needs to be added",
                        "schema": {
                            "$ref": "#/definitions/userSocket"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Message not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [
                    {
                        "hey_auth": [
                            "write:pets",
                            "read:pets"
                        ]
                    }
                ]
            }
        }
    },
    "securityDefinitions": {
        "hey_auth": {
            "type": "oauth2",
            "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
            "flow": "implicit",
            "scopes": {
                "write:pets": "modify pets in your account",
                "read:pets": "read your pets"
            }
        },
        "api_key": {
            "type": "apiKey",
            "name": "api_key",
            "in": "header"
        }
    },
    "definitions": {
        "message": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "from": {
                    "type": "integer",
                    "format": "int64"
                },
                "to": {
                    "type": "integer",
                    "format": "int64"
                },
                "message": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                }
            }
        },
        "messageUpdate": {
            "type": "object",
            "properties": {
                "from": {
                    "type": "integer",
                    "format": "int64"
                },
                "to": {
                    "type": "integer",
                    "format": "int64"
                },
                "message": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "Messsages"
            }
        },
        "user":{
            "type": "object",
            "properties": {
                "user": {
                    "type": "string"
                },
                "socket": {
                    "type": "string"
                },
                "date":{
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                }
            }
        },
        "userSocket":{
            "type": "object",
            "properties": {
                "status": {
                    "type": "boolean"
                }
            }
        },
        "ApiResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    },
    "externalDocs": {
        "description": "Find out more about Swagger",
        "url": "http://swagger.io"
    }
}